<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Home on That&#39;s interesting</title>
    <link>https://ajaybanstola.com.np/</link>
    <description>Recent content in Home on That&#39;s interesting</description>
    <generator>Hugo -- 0.125.6</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ajaybanstola.com.np/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Majority Element</title>
      <link>https://ajaybanstola.com.np/posts/lesson18/</link>
      <pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson18/</guid>
      <description>Here is the link to the problem: Majority Element.
Problem Statement: Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.
Examples: Example 1:
Input: nums = [3,2,3] Output: 3
Example 2:
Input: nums = [2,2,1,1,1,2,2] Output: 2
My Solution class Solution(object): def majorityElement(self, nums): &amp;#34;&amp;#34;&amp;#34; :type nums: List[int] :rtype: int &amp;#34;&amp;#34;&amp;#34; new_dict = {} for each in nums: if each in new_dict: new_dict[each] += 1 else: new_dict[each] = 1 for each in new_dict: if new_dict[each] &amp;gt; len(nums)/ 2: return each This is nothing, very simple.</description>
    </item>
    <item>
      <title>Single Number</title>
      <link>https://ajaybanstola.com.np/posts/lesson17/</link>
      <pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson17/</guid>
      <description>Here is the link to the problem: Single Number.
Problem Statement: Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.
Examples: Example 1:
Input: nums = [2,2,1]
Output: 1
Example 2:
Input: nums = [4,1,2,1,2]
Output: 4
Example 3:
Input: nums = [1]
Output: 1</description>
    </item>
    <item>
      <title>Valid Palindrome</title>
      <link>https://ajaybanstola.com.np/posts/lesson16/</link>
      <pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson16/</guid>
      <description>Here is the link to the problem: Valid Palindrome.
Problem Statement: A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.
Examples: Example 1:
Input: s = &amp;ldquo;A man, a plan, a canal: Panama&amp;rdquo;</description>
    </item>
    <item>
      <title>Merge sorted array</title>
      <link>https://ajaybanstola.com.np/posts/lesson15/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson15/</guid>
      <description>Here is the link to the problem: Merge Sorted Array.
Problem Statement: You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.
Merge nums1 and nums2 into a single array sorted in non-decreasing order.
The final sorted array should not be returned by the function, but instead be stored inside the array nums1.</description>
    </item>
    <item>
      <title>Climbing Stairs</title>
      <link>https://ajaybanstola.com.np/posts/lesson14/</link>
      <pubDate>Mon, 22 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson14/</guid>
      <description>Here is the link to the problem: Climbing Stairs.
Problem Statement: You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Examples: Example 1:
Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1 step + 1 step
2 steps</description>
    </item>
    <item>
      <title>Square root</title>
      <link>https://ajaybanstola.com.np/posts/lesson13/</link>
      <pubDate>Mon, 22 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson13/</guid>
      <description>Here is the link to the problem: Square root.
Problem Statement: Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
You must not use any built-in exponent function or operator.
For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
Examples: Example 1:
Input: x = 4
Output: 2</description>
    </item>
    <item>
      <title>Add Binary</title>
      <link>https://ajaybanstola.com.np/posts/lesson12/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson12/</guid>
      <description>Here is the link to the problem: Add Binary.
Problem Statement: Given two binary strings a and b, return their sum as a binary string.
Examples: Example 1:
Input: a = &amp;ldquo;11&amp;rdquo;, b = &amp;ldquo;1&amp;rdquo; Output: &amp;ldquo;100&amp;rdquo;
Example 2:
Input: a = &amp;ldquo;1010&amp;rdquo;, b = &amp;ldquo;1011&amp;rdquo; Output: &amp;ldquo;10101&amp;rdquo;
My Solution class Solution(object): def addBinary(self, a, b): &amp;#34;&amp;#34;&amp;#34; :type a: str :type b: str :rtype: str &amp;#34;&amp;#34;&amp;#34; c = 0 res = &amp;#34;&amp;#34; a_r, b_r = a[::-1], b[::-1] for i in range(max(len(a), len(b))): a_val = a_r[i] if i &amp;lt; len(a) else 0 b_val = b_r[i] if i &amp;lt; len(b) else 0 sum = c + int(a_val) + int(b_val) r = sum % 2 c = sum // 2 res += str(r) if c: return (str(c) + res[::-1]) else: return res[::-1] So even though this is an easy problem, but there are a lot of things to be considered.</description>
    </item>
    <item>
      <title>Length of Last word</title>
      <link>https://ajaybanstola.com.np/posts/lesson10/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson10/</guid>
      <description>Here is the link to the problem: Length of Last word.
Problem Statement: Given a string s consisting of words and spaces, return the length of the last word in the string.
A word is a maximal substring consisting of non-space characters only.
Examples: Example 1:
Input: s = &amp;ldquo;Hello World&amp;rdquo;
Output: 5
Explanation: The last word is &amp;ldquo;World&amp;rdquo; with length 5.
Example 2:
Input: s = &amp;quot; fly me to the moon &amp;quot;</description>
    </item>
    <item>
      <title>Plus one</title>
      <link>https://ajaybanstola.com.np/posts/lesson11/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson11/</guid>
      <description>Here is the link to the problem: Plus one.
Problem Statement: You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0&amp;rsquo;s.
Increment the large integer by one and return the resulting array of digits.
Examples: Example 1:</description>
    </item>
    <item>
      <title>Search Insert Position</title>
      <link>https://ajaybanstola.com.np/posts/lesson9/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson9/</guid>
      <description>Here is the link to the problem: Search Insert Position
Problem Statement: Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Examples: Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:</description>
    </item>
    <item>
      <title>Index of First Occurennce in String</title>
      <link>https://ajaybanstola.com.np/posts/lesson8/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson8/</guid>
      <description>Here is the link to the problem: Index of First Occurrence in String
Problem Statement: Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
Examples: Example 1:
Input: haystack = &amp;ldquo;sadbutsad&amp;rdquo;, needle = &amp;ldquo;sad&amp;rdquo;
Output: 0
Explanation: &amp;ldquo;sad&amp;rdquo; occurs at index 0 and 6. The first occurrence is at index 0, so we return 0.</description>
    </item>
    <item>
      <title>Remove duplicates from Sorted Array</title>
      <link>https://ajaybanstola.com.np/posts/lesson7/</link>
      <pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson7/</guid>
      <description>Here is the link to the problem: Remove Duplicates from sorted Array.
Problem Statement: Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.
Consider the number of unique elements of nums to be k, to get accepted, you need to do the following things:</description>
    </item>
    <item>
      <title>Merge Two Sorted List: With and without Linked list</title>
      <link>https://ajaybanstola.com.np/posts/lesson6/</link>
      <pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson6/</guid>
      <description>Here is the link to the problem: Merge Two Sorted List.
Problem Statement: You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.
Examples: Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:</description>
    </item>
    <item>
      <title>Valid Parentheses Solution: Me vs Neetcode</title>
      <link>https://ajaybanstola.com.np/posts/lesson5/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson5/</guid>
      <description>Here is the link to the problem: Valid Parentheses.
Problem Statement: Given a string s containing just the characters &amp;lsquo;(&amp;rsquo;, &amp;lsquo;)&amp;rsquo;, &amp;lsquo;{&amp;rsquo;, &amp;lsquo;}&amp;rsquo;, &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&amp;rsquo;, determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type.</description>
    </item>
    <item>
      <title>3Sum Closest Solution: Me vs ChatGPT</title>
      <link>https://ajaybanstola.com.np/posts/lesson4/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson4/</guid>
      <description>Here is the link to the problem: 3Sum Closest.
Problem Statement: Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.
Return the sum of the three integers.
You may assume that each input would have exactly one solution.
Examples: Example 1:
Input: nums = [-1,0,1,2,-1,-4]
Target: 1
Output: 2
Explanation: The sum that is closest to the target is 2.</description>
    </item>
    <item>
      <title>Solution to 3sum problem and its edge cases</title>
      <link>https://ajaybanstola.com.np/posts/lesson3/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson3/</guid>
      <description>Here is the link to the problem: Three Sum.
Problem Statement: Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.
Examples: Example 1:
Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation:
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.</description>
    </item>
    <item>
      <title>Three ways to solve the 2-sum problem</title>
      <link>https://ajaybanstola.com.np/posts/lesson2/</link>
      <pubDate>Sun, 23 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson2/</guid>
      <description>Here is the link to the problem: Two Sum.
Problem Statement: Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Examples: Example 1:
Input: nums = [2,7,11,15], target = 9</description>
    </item>
    <item>
      <title>Casual/Informal Nepali Language Lesson 1</title>
      <link>https://ajaybanstola.com.np/posts/lesson1/</link>
      <pubDate>Mon, 13 May 2024 22:52:14 +0545</pubDate>
      <guid>https://ajaybanstola.com.np/posts/lesson1/</guid>
      <description>Often times when foreigners try to learn Nepali, they get a very formal Nepali language written in text books or websites. My goal here is to teach Nepali in a way that is spoken everyday. As someone who was born in Nepal and lived there for over 25 years, I can be the best source to learn the everyday language.
Hey, how are you? -&amp;gt; K chha?
How&amp;rsquo;s it going? -&amp;gt; Kasto chaldai chha?</description>
    </item>
    <item>
      <title></title>
      <link>https://ajaybanstola.com.np/sql/first-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/sql/first-sql/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>https://ajaybanstola.com.np/sql/second-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/sql/second-sql/</guid>
      <description></description>
    </item>
    <item>
      <title>Portfolio</title>
      <link>https://ajaybanstola.com.np/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ajaybanstola.com.np/portfolio/</guid>
      <description>Education Masters in Computer Science at University of Louisiana at Lafayette Experience Software Engineer at Tekvortex Pvt. Ltd., Lalitpur, Nepal - 2 years Associate Software Engineer at Paynep Pvt. Ltd., Kathmandu, Nepal - 1 year Hobbies Coding Youtube Marathon Gym Japanese Chess,Badminton Reading Contact: ajay.banstola@gmail.com </description>
    </item>
  </channel>
</rss>
